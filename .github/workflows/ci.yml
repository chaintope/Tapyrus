name: CI

on: [push, pull_request]

jobs:
  arm:
    name: "[PENDING]ARM"
    runs-on: ubuntu-18.04
    steps:
      - run: echo "PENDING. make install is failing."
#      - uses: actions/checkout@v1
#      - run: |
#          source ./default-env.sh
#          HOST=arm-linux-gnueabihf \
#          PACKAGES="g++-arm-linux-gnueabihf" \
#          DEP_OPTS="NO_QT=1" \
#          GOAL="install" \
#          BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports" \
#          bash -xe ./build-test.sh

  win32:
    name: "WIN32"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=i686-w64-mingw32 \
          DPKG_ADD_ARCH="i386" \
          DEP_OPTS="NO_QT=1" \
          PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32" \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-reduce-exports" \
          bash -xe ./build-test.sh

  win64:
    name: "WIN64"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-w64-mingw32 \
          DEP_OPTS="NO_QT=1" \
          PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64" \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-reduce-exports" \
          bash -xe ./build-test.sh

  linux-32bit-dash:
    name: "[PENDING]32-bit + dash"
    runs-on: ubuntu-18.04
    steps:
      - run: echo "PENDING. Runnning time is over 2 hours limit."
#      - uses: actions/checkout@v1
#      - run: |
#          source ./default-env.sh
#          HOST=i686-pc-linux-gnu \
#          PACKAGES="g++-multilib python3-zmq" \
#          DEP_OPTS="NO_QT=1" \
#          RUN_TESTS=true \
#          GOAL="install" \
#          BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" \
#          CONFIG_SHELL="/bin/dash" \
#          bash -xe ./build-test.sh

  build_x86_linux_no_gui_debug:
    name: x86 Linux, No GUI, Debug

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Build debug
        run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev" \
          NO_DEPENDS=1 \
          DEP_OPTS="NO_QT=1" \
          RUN_TESTS=true \
          DEBUD_MODE=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-reduce-exports --with-gui=no --enable-debug CPPFLAGS=-DDEBUG  CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  build_x86_linux_no_gui_release:
    name: x86 Linux, No GUI, Release

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Build release
        run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev" \
          NO_DEPENDS=1 \
          DEP_OPTS="NO_QT=1" \
          RUN_TESTS=true \
          DEBUD_MODE=false \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-reduce-exports --with-gui=no CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  linux-with-qt:
    name: "x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev" \
          DEP_OPTS="NO_QT=1 NO_UPNP=1 ALLOW_HOST_PACKAGES=1" \
          RUN_TESTS=true \
          RUN_BENCH=false \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug" \
          CXXFLAGS="-g0 -O2" \
          bash -xe ./build-test.sh

  linux-with-qt-and-system-lib:
    name: "x86_64 Linux (Qt5 & system libs)"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev" \
          NO_DEPENDS=1 \
          RUN_TESTS=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  linux-no-wallet:
    name: "x86_64 Linux, No wallet"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3" \
          DEP_OPTS="NO_WALLET=1" \
          RUN_TESTS=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports" \
          bash -xe ./build-test.sh

  cross-mac_debug:
    name: Cross Mac Debug
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-apple-darwin14 \
          PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git" \
          OSX_SDK=10.11 \
          GOAL="all deploy" \
          DEBUD_MODE=true \
          BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror CPPFLAGS=-DDEBUG " \
          bash -xe ./build-test.sh
  cross-mac_release:
    name: Cross Mac Release
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: |
          source ./default-env.sh
          HOST=x86_64-apple-darwin14 \
          PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git" \
          OSX_SDK=10.11 \
          GOAL="all deploy" \
          DEBUD_MODE=false \
          BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror" \
          bash -xe ./build-test.sh

  lint:
    name: "[PARTIAL_PENDING]lint"

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: |
          RETRY() { for i in {1..3};do $*&&break;sleep 1;done }
          RETRY apt-get update
          RETRY apt-get install --no-install-recommends --no-upgrade -qq python3 python3-pip git
          RETRY pip3 install flake8
          if [ $GITHUB_EVENT_NAME != "pull_request" ]; then test/lint/commit-script-check.sh $(git rev-parse $GITHUB_BASE_REF)..$(git rev-parse HEAD); fi
          # we changed subtrees for add CMake files. So far it comment outed.
          # test/lint/git-subtree-check.sh src/crypto/ctaes
          # test/lint/git-subtree-check.sh src/secp256k1
          # test/lint/git-subtree-check.sh src/univalue
          # test/lint/git-subtree-check.sh src/leveldb
          test/lint/check-doc.py
          test/lint/check-rpc-mappings.py .
          test/lint/lint-all.sh
          echo "PENDING some lint files! pending lint file name has 'pending-' prefix."
          ls test/lint/ | grep ^pending-
